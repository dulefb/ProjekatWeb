// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Proba1.Migrations
{
    [DbContext(typeof(DestilerijaContext))]
    [Migration("20220206204641_V4")]
    partial class V4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Burad", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodID")
                        .HasColumnType("int");

                    b.Property<int?>("ProizvodnjaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProizvodID");

                    b.HasIndex("ProizvodnjaID");

                    b.ToTable("Burad");
                });

            modelBuilder.Entity("Models.Proizvod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Models.Proizvodnja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Proizvodnja");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Radnik");
                });

            modelBuilder.Entity("ProizvodnjaRadnik", b =>
                {
                    b.Property<int>("ProizvodnjaID")
                        .HasColumnType("int");

                    b.Property<int>("RadnikID")
                        .HasColumnType("int");

                    b.HasKey("ProizvodnjaID", "RadnikID");

                    b.HasIndex("RadnikID");

                    b.ToTable("ProizvodnjaRadnik");
                });

            modelBuilder.Entity("Models.Burad", b =>
                {
                    b.HasOne("Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID");

                    b.HasOne("Models.Proizvodnja", "Proizvodnja")
                        .WithMany("Burad")
                        .HasForeignKey("ProizvodnjaID");

                    b.Navigation("Proizvod");

                    b.Navigation("Proizvodnja");
                });

            modelBuilder.Entity("ProizvodnjaRadnik", b =>
                {
                    b.HasOne("Models.Proizvodnja", null)
                        .WithMany()
                        .HasForeignKey("ProizvodnjaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Radnik", null)
                        .WithMany()
                        .HasForeignKey("RadnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Proizvodnja", b =>
                {
                    b.Navigation("Burad");
                });
#pragma warning restore 612, 618
        }
    }
}
